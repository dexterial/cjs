(function(){var h=6;var d=50;var f='"-pruned-"';var b;var j;var e=function(o,p){for(var n in o){if(Object.prototype.hasOwnProperty.call(o,n)){p(n)}}};var c=function(o,p){for(var n in o){p(n)}};var l=function(o,p,n){if(o==null){return}n=n||{};Object.getOwnPropertyNames(o).forEach(function(q){if(!n[q]){p(q);n[q]=true}});l(Object.getPrototypeOf(o),p,n)};Date.prototype.toPrunedJSON=Date.prototype.toJSON;String.prototype.toPrunedJSON=String.prototype.toJSON;var i=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,k=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,m={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"};function a(n){k.lastIndex=0;return k.test(n)?'"'+n.replace(k,function(o){var p=m[o];return typeof p==="string"?p:"\\u"+("0000"+o.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+n+'"'}var g=function(r,s,q){var p=f;var o;if(typeof s=="object"){var n=s;s=n.depthDecr;q=n.arrayMaxLength;j=n.iterator||e;if(n.allProperties){j=l}else{if(n.inheritedProperties){j=c}}if("prunedString" in n){p=n.prunedString}if(n.replacer){o=n.replacer}}else{j=e}b=[];s=s||h;q=q||d;function t(D,B,x){var z,y,E,u,A,C=B[D];if(C&&typeof C==="object"&&typeof C.toPrunedJSON==="function"){C=C.toPrunedJSON(D)}switch(typeof C){case"string":return a(C);case"number":return isFinite(C)?String(C):"null";case"boolean":case"null":return String(C);case"object":if(!C){return"null"}if(x<=0||b.indexOf(C)!==-1){if(o){var w=o(C,p,true);return w===undefined?undefined:""+w}return p}b.push(C);A=[];if(Object.prototype.toString.apply(C)==="[object Array]"){u=Math.min(C.length,q);for(z=0;z<u;z+=1){A[z]=t(z,C,x-1)||"null"}E="["+A.join(",")+"]";if(o&&C.length>q){return o(C,E,false)}return E}j(C,function(v){try{E=t(v,C,x-1);if(E){A.push(a(v)+":"+E)}}catch(F){}});return"{"+A.join(",")+"}";case"function":case"undefined":return o?o(C,undefined,false):undefined}}return t("",{"":r},s)};g.log=function(){console.log.apply(console,Array.prototype.slice.call(arguments).map(function(n){return JSON.parse(JSON.prune(n))}))};g.forEachProperty=l;if(typeof module!=="undefined"){module.exports=g}else{JSON.prune=g}}());